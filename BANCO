Package Programa

class pessoa:
package Programa;

public class Pessoa {

private static int counter = 1;
	
private String nome;
private String cpf;
private String email;
private String endereço;
private String renda;
private String profissao;

public Pessoa(String nome, String email, String cpf, String endereço, String renda, String profissao) {
	this.nome = nome;
	this.cpf = cpf;
	this.email = email;
	this.endereço = endereço;
	this.renda = renda;
	this.profissao = profissao;
	counter += 1;
}
public String getNome() {
	return nome;
}
public void setNome(String nome) {
	this.nome = nome;
}
public String getCPF() {
	return cpf;
}
public void setCPF(String cPF) {
	cpf = cPF;
}
public String getEmail() {
	return email;
}
public void setEmail(String email) {
	this.email = email;
}
public String getEndereço() {
	return endereço;
}
public void setEndereço(String endereço) {
	this.endereço = endereço;
}
public String getRenda() {
	return renda;
}
public void setRenda(String renda) {
	this.renda = renda;
}
public String getProfissao() {
	return profissao;
}
public void setProfissao(String profissao) {
	this.profissao = profissao;
}

public String toString() {
	return "\nNome: " + this.getNome() +
			"\nCPF: " + this.getCPF() +
			"\nEmail: " + this.getEmail()+
			"\nProfissao: " + this.getProfissao()+
			"\nRenda: " + this.getRenda()+
			"\nEndereço: " + this.getEndereço();
}

}


class Conta:
package Programa;

import utilitarios.utils;

public class Conta {

	private static int contadorDeContas = 1;
	
	
	private int numeroConta;
	private Pessoa pessoa;
	private Double saldo = 0.0;
	public Conta(Pessoa pessoa) {
		
		this.numeroConta = contadorDeContas;
		this.pessoa = pessoa;
		contadorDeContas += 1;
		
	}
	public int getNumeroConta() {
		return numeroConta;
	}
	public void setNumeroConta(int numeroConta) {
		this.numeroConta = numeroConta;
	}
	public Pessoa getPessoa() {
		return pessoa;
	}
	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}
	public Double getSaldo() {
		return saldo;
	}
	public void setSaldo(Double saldo) {
		this.saldo = saldo;
	}
	
	public String toString() {
		return "\nNumero da conta: " + this.getNumeroConta() +
		       "\nNome: " + this.pessoa.getNome() +
		       "\nCPF: " + this.pessoa.getCPF()+
		       "\nEmail: " + this.pessoa.getEmail() +
		       "\nEndereço: " + this.pessoa.getEndereço() +
		       "\nProfissao: " + this.pessoa.getProfissao() +
		       "\nRenda: " + this.pessoa.getRenda() +
		       "\nSaldo: " + utils.doubleToString(this.getSaldo()) +
		       "\n";
	}
	
	public void depositar(Double valor) {
		if(valor > 0) {
			setSaldo(getSaldo() + valor );
			System.out.println("Seu deposito foi realizado com sucesso!");
		}else {
			System.out.println("Não foi possivel realizar o deposito!");
		}
		
	}
	
	public void sacar(Double valor) {
		if(valor > 0  && this.getSaldo() >= valor) {
			
			setSaldo(getSaldo() - valor);
			System.out.println("Saque realizado com sucesso!");
		}else {
			System.out.println("Não foi possivel realizar o saque!");
		}
		
	}
	
	public void transferir(Conta contaParadeposito, Double valor) {
		if(valor > 0 && this.getSaldo() >= valor) {
			setSaldo(getSaldo() - valor);
			
			contaParadeposito.saldo = contaParadeposito.getSaldo() + valor;
			System.out.println("Transferencia realizada com sucesso!");
			
			
		}else {
			
			System.out.println("Não foi possivel realizar a transferencia!");
		}
		
	}
}


class Agencia Bancaria:
package Programa;

import java.util.ArrayList;
import java.util.Scanner;

public class AgenciaBancaria {

	static Scanner input = new Scanner(System.in);
	static ArrayList<Conta> contasBancarias;
	
	public static void main(String[] args) {
		contasBancarias = new ArrayList<Conta>();
		operacoes();
		
	}
	
	public static void operacoes() {
		System.out.println("Poor Bank");
		System.out.println("Selecione uma opçao:");
		System.out.println(" 1 - Criar conta");
		System.out.println(" 2 - Depositar");
		System.out.println(" 3 - Sacar");
		System.out.println(" 4 - Transferir");
		System.out.println(" 5 - Listar");
		System.out.println(" 6 - Sair");
		
		int operacao = input.nextInt();
		
		switch(operacao) {
		case 1:
			criarConta();
			break;
		case 2:
			depositar();
			break;
		case 3:
			sacar();
			break;
		case 4:
			transferir();
			break;
		case 5:
			listarContas();
			break;
		case 6:
			System.out.println("Saiu!");
			System.exit(0);
			
			
		default:
			
			System.out.println("Opçao invalida!");
			operacoes();
			break;
			
		}
		
	}
	
	public static void criarConta() {
		System.out.println("\nNome: ");
		String nome = input.next();
		
		System.out.println("\nCPF: ");
		String cpf = input.next();
		
		System.out.println("\nEmail: ");
		String email = input.next();
		
		System.out.println("\nEndereço: ");
		String endereço = input.next();
		
		System.out.println("\nRenda: ");
		String renda = input.next();
		

		System.out.println("\nProfissao: ");
		String profissao = input.next();
		
		Pessoa pessoa = new Pessoa(nome, email, cpf, endereço, renda, profissao);
		
		Conta conta = new Conta(pessoa);
		
		contasBancarias.add(conta);
		System.out.println("Sua conta foi criada com sucesso!");
		
		operacoes();
	}
	
	private static Conta encontrarConta(int numeroConta) {
		Conta conta = null;
		if(contasBancarias.size() > 0) {
			for( Conta c: contasBancarias) {
				if(c.getNumeroConta() == numeroConta);
				conta = c;
			}
		}
		return conta;
	}
	
	public static void depositar( ) {
		System.out.println("Numero da conta: ");
		int numeroConta = input.nextInt();
		
		Conta conta = encontrarConta(numeroConta);
		
		if(conta != null) {
			System.out.println("Qual valor deseja depositar?");
			double valorDeposito = input.nextDouble();
			conta.depositar(valorDeposito);
			System.out.println("Valor depositado com sucesso");

			}else {
				
				System.out.println("Conta nao encontrada");

			}
		operacoes();
	}
	
	
	public static void sacar() {
		System.out.println("Numero da conta: ");
		int numeroConta = input.nextInt();
		Conta conta = encontrarConta(numeroConta);
		
		if(conta != null) {
			System.out.println("Qual valor deseja sacar?");
			double valorSaque = input.nextDouble();
			conta.depositar(valorSaque);
			 

			}else {
				
				System.out.println("Conta nao encontrada");

			}
		operacoes();
		
	}
	
	
	public static void transferir() {
		System.out.println("Numero da conta do remetente: ");
		int numeroContaRemetente = input.nextInt();
		
		Conta contaRemetente = encontrarConta(numeroContaRemetente);
		
		if(contaRemetente != null) {
			System.out.println("Numero da conta do destinatario: ");
			int numeroContaDestinatario = input.nextInt();
			
			Conta contaDestinatario = encontrarConta(numeroContaDestinatario);
			
			if(contaDestinatario != null) {
				System.out.println("Valor da transferencia: ");
				Double valor = input.nextDouble();
				
				contaRemetente.transferir(contaDestinatario, valor);
			}else {
				System.out.println("A conta para deposito nao foi encontrada");
			}
		}else {
			System.out.println("Conta para transferencia nao encontrada");
		}
		operacoes();
	}
	
	public static void listarContas() {
		if(contasBancarias.size() > 0) {
			for(Conta conta: contasBancarias) {
				System.out.println(conta);
			}
			}else {
				System.out.println("Nao a contas cadastradas!");
			
		}
		operacoes();
	}
	
}


package Utilitarios
class utils:
package utilitarios;

import java.text.DecimalFormat;
import java.text.NumberFormat;


public class utils {

	static NumberFormat formatandoValores = new DecimalFormat("R$ #,##0,00");
	
	public static String doubleToString(Double valor ) {
		return formatandoValores.format(valor);
		
	}
	
}
